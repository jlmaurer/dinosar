name: Package

on:
  pull_request:
    branches: master
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  poetry:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Conda Environment
        uses: goanpeca/setup-miniconda@v1
        with:
           environment-file: environment-poetry.yml
           activate-environment: dinosar-dev
           miniconda-version: 4.7.12
           auto-update-conda: true

      - name: Setup Poetry Virtualenv Cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: |
          poetry config --list
          poetry install

      - name: Code Quality
        shell: bash -l {0}
        run: poetry run black . --check

      - name: Test with Pytest
        shell: bash -l {0}
        run: poetry run pytest --cov=dinosar --cov-report=xml

      - name: Upload CodeCov Report for Badge
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} #required
          file: ./coverage.xml #optional

      - name: Build Package with Poetry
        shell: bash -l {0}
        run: poetry build

      - name: Push package to Test PyPi
        # NOTE: can do this for a pull request and publish to actual PyPi after tagging release
        if: startswith(github.ref, 'refs/tags')
        shell: bash -l {0}
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry publish -r testpypi -u ${{ secrets.TESTPYPI_USER }} -p ${{ secrets.TESTPYPI_PASS }}
